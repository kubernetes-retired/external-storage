language: go
go:
  - 1.7.5
services: docker

env:
  - ETCD_VER=v3.0.14 KUBE_VERSION=1.5.4
  - ETCD_VER=v3.0.17 KUBE_VERSION=1.6.0

before_install:
  - sudo apt-get -qq update
  - sudo apt-get install -y nfs-common
  - curl https://glide.sh/get | sh
  - go get -u github.com/golang/lint/golint
  - export PATH=$PATH:$GOPATH/bin
  - go get -u github.com/cloudflare/cfssl/cmd/...

install:
  - pushd $HOME
  - DOWNLOAD_URL=https://github.com/coreos/etcd/releases/download
  - curl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz
  - mkdir -p /tmp/test-etcd && tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/test-etcd --strip-components=1
  - PATH=${PATH}:/tmp/test-etcd
  - curl -L https://dl.k8s.io/v${KUBE_VERSION}/kubernetes-server-linux-amd64.tar.gz | tar xz
  - curl -L https://github.com/kubernetes/kubernetes/archive/v${KUBE_VERSION}.tar.gz | tar xz
  - popd
 
before_script:
  - sudo "PATH=$PATH" KUBECTL=$HOME/kubernetes/server/bin/kubectl ALLOW_SECURITY_CONTEXT=true API_HOST_IP=0.0.0.0 $HOME/kubernetes-${KUBE_VERSION}/hack/local-up-cluster.sh -o $HOME/kubernetes/server/bin &
  - KUBECTL=$HOME/kubernetes/server/bin/kubectl
  - if [ "$KUBE_VERSION" = "1.5.4" ]; then
      $KUBECTL config set-cluster local --server=https://localhost:6443 --certificate-authority=/var/run/kubernetes/apiserver.crt;
      $KUBECTL config set-credentials myself --username=admin --password=admin;
    else
      $KUBECTL config set-cluster local --server=https://localhost:6443 --certificate-authority=/var/run/kubernetes/server-ca.crt;
      $KUBECTL config set-credentials myself --client-key=/var/run/kubernetes/client-admin.key --client-certificate=/var/run/kubernetes/client-admin.crt;
    fi
  - $KUBECTL config set-context local --cluster=local --user=myself
  - $KUBECTL config use-context local

script:
    # Test building library using its dependencies (they ought to be the same as
    # the shared ones)
  - pushd ./lib
  - glide install -v
  - ./verify.sh
  - go test ./controller
    # Test building library using shared dependencies
  - rm -rf ./vendor
  - go test ./controller
  - popd
    # Test building hostpath-provisioner demo
  - pushd ./docs/demo/hostpath-provisioner
  - make image
  - make clean
  - popd
  - pushd ./ceph/cephfs
  - go build cephfs-provisioner.go
  - popd
  - pushd ./aws/efs
  - make container
  - make test
  - make clean
  - popd
  - pushd ./gluster/block
  - go build cmd/glusterblock-provisioner/glusterblock-provisioner.go
  - popd
  - pushd ./flex
  - make container
  - popd
  - pushd ./nfs-client
  - ./build.sh
  - popd
    # Test building and running nfs-provisioner
  - pushd ./nfs
  - make container
  - make test-integration
  - if [ "$KUBE_VERSION" != "1.5.4" ]; then
      sudo chown -R $(logname) /var/run/kubernetes;
    fi
  - make test-e2e
